<%
apache = Chef::Recipe::Apache
re_prefix = 'regex:'
cert_name = @config[:cert_name]

server_name = apache.get_server_name(@config[:server_name], @config[:mode], @hostname, @app_name)
%>

<IfModule mod_ssl.c>

<VirtualHost <%=@ip_address%>:443>

  ServerName <%=server_name%>

  SSLEngine on
  <% if cert_name.nil? %>
  SSLCertificateFile    /etc/ssl/certs/ssl-https.pem
  SSLCertificateKeyFile /etc/ssl/private/ssl-https.key
  <% else %>
  SSLCertificateFile    /etc/ssl/certs/<%=cert_name%>.pem
  SSLCertificateKeyFile /etc/ssl/private/<%=cert_name%>.key
  <% end %>

  ServerSignature Off
  Header add Strict-Transport-Security: "max-age=15768000;includeSubdomains"

<% if (@config[:mode] == :proxy || @config[:mode] == :proxy_root) && @config[:port] %>
  RequestHeader set X_FORWARDED_PROTO 'https'
  ProxyPreserveHost On

  <% if @config[:mode] == :proxy_root %>
  IncludeOptional https-services-enabled/
  <% end %>

  <% if @cloudos_port %>
  ProxyPass /__cloudos__/ http://127.0.0.1:<%=@cloudos_port%>/
  ProxyPassReverse /__cloudos__/ http://127.0.0.1:<%=@cloudos_port%>/
  <% end %>

  <% if @config[:filters] %>
  # Filter these URLs through CloudOs; rules defined in the app manifest
    <% @config[:filters].each do |filter| %>
      <% if filter.start_with? re_prefix %>
  ProxyPassMatch ^<%=@config[:mount]%>/(<%=filter[re_prefix.length .. -1]%>) http://127.0.0.1:<%=@cloudos_port%>/api/app/filter/<%=@app_name%>/$1
      <% else %>
  ProxyPass <%=@config[:mount]%>/<%=filter%> http://127.0.0.1:<%=@cloudos_port%>/api/app/filter/<%=@app_name%>/<%=filter%>
  ProxyPassReverse <%=@config[:mount]%>/<%=filter%> http://127.0.0.1:<%=@cloudos_port%>/api/app/filter/<%=@app_name%>/<%=filter%>
      <% end %>
    <% end %>
  <% end %>

  <% if @config[:auth] %>
  AuthenicateCookieName __cloudos_http_auth
  <% end %>

  ProxyPass <%=@config[:mount]%> http://127.0.0.1:<%=@config[:port]%><%=@config[:local_mount]%>
  ProxyPassReverse <%=@config[:mount]%> http://127.0.0.1:<%=@config[:port]%><%=@config[:local_mount]%>

  LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b" common_forwarded
  ErrorLog ${APACHE_LOG_DIR}/<%=server_name%>_error.log
  CustomLog ${APACHE_LOG_DIR}/<%=server_name%>_forwarded.log common_forwarded
  CustomLog ${APACHE_LOG_DIR}/<%=server_name%>_access.log combined env=!dontlog
  CustomLog ${APACHE_LOG_DIR}/<%=server_name%>.log combined

<% else %>

  <% if @config[:mode] == :vhost_root %>
  IncludeOptional https-services-enabled/

    <% if @cloudos_port %>
  ProxyPass <%=@config[:mount]%>/__cloudos__/ http://127.0.0.1:<%=@cloudos_port%>/
  ProxyPassReverse <%=@config[:mount]%>/__cloudos__/ http://127.0.0.1:<%=@cloudos_port%>/
      <% unless @config[:mount] == '/' %>
  ProxyPass /__cloudos__/ http://127.0.0.1:<%=@cloudos_port%>/
  ProxyPassReverse /__cloudos__/ http://127.0.0.1:<%=@cloudos_port%>/
      <% end %>
    <% end %>

  RewriteEngine on
  IncludeOptional rewrite-rules-enabled/
  RewriteCond expr true
  RewriteRule ^(.*)$ /<%=File.basename(@config[:doc_root])%>$1

  <% else %>
  DocumentRoot <%=@config[:doc_root]%>
  <% end %>

  ErrorLog ${APACHE_LOG_DIR}/<%=server_name%>_error.log
  CustomLog ${APACHE_LOG_DIR}/<%=server_name%>_access.log combined env=!dontlog
  CustomLog ${APACHE_LOG_DIR}/<%=server_name%>.log combined
<% end %>

<% if @config[:vhost] %>
  IncludeOptional apps/<%=@app_name%>/vhost.conf
<% end %>

<% if @config[:dir] %>
    <% @config[:dir].each do |dir| %>

      <% full_path = dir.sub('@doc_root', @config[:doc_root]) %>

      <Directory <%=full_path%>>
        IncludeOptional <%=apache.dir_config_path(@app_name, apache.dir_base(dir))%>
      </Directory>

    <% end %>
<% end %>

<% if @config[:location] %>
    <% @config[:location].each do |loc| %>

      <Location <%=loc%>>
        IncludeOptional <%=apache.loc_config_path(@app_name, apache.loc_base(loc))%>
      </Location>

    <% end %>
<% end %>

	<FilesMatch "\.(cgi|shtml|phtml|php)$">
		SSLOptions +StdEnvVars
	</FilesMatch>

	BrowserMatch "MSIE [2-6]" \
		nokeepalive ssl-unclean-shutdown \
		downgrade-1.0 force-response-1.0
	# MSIE 7 and newer should be able to use keepalive
	BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

</VirtualHost>

</IfModule>